# -*- coding: utf-8 -*-
"""FinalChartProject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17AOlcypnE-_bHp23nLxFAjjWFJeNe35t
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import seaborn.objects as so

EV= pd.read_csv("https://raw.githubusercontent.com/odu-cs625-datavis/fall23-asv-Rupa42/main/Electric_Vehicle_Population_deleted_cols.csv?token=GHSAT0AAAAAACKXYHX6YZBVV2E4XZ26QEI6ZLQFBHA")

EV.columns

EV = EV.rename(columns={'Model Year': 'Year', 'Base MSRP':'BasePrice'})

EV.dtypes

EV.head()

EV2 = EV.loc[EV['Electric Vehicle Type'] == 'Battery Electric Vehicle (BEV)']

EV2 = EV2[['Make', 'Model', 'Electric Range']]

EV2

max_range = EV2.groupby( ['Make','Model']).max()

max_range = max_range[max_range['Electric Range'] > 1] #filter out bad data.

top_ten_range = max_range[max_range['Electric Range'] > 100].nlargest(10, 'Electric Range', keep='first')

top_ten_range

from matplotlib import pyplot as plt
top_ten_range['Electric Range'].plot(kind='line', figsize=(10, 4), title='Electric Range')
plt.gca().spines[['top', 'right']].set_visible(False)

top_2018_2022 = EV.loc[EV['Year'] > 2017 ].loc[EV['Year'] < 2023 ].groupby(['Make']).size().reset_index(name='counts')

top_2018_2022.nlargest(7, 'counts', keep='first')

sum_top_7 = top_2018_2022.loc[top_2018_2022['Make'].isin(['TESLA', 'NISSAN','CHEVROLET',
                                                         'KIA',]), 'counts'].sum()

other_makes_besides_top_7 = (top_2018_2022['counts'].sum()) - sum_top_7

other_makes_besides_top_7

top_2018_2022.loc[len(top_2018_2022.index)] = ['Other Makes', other_makes_besides_top_7]

top_2018_2022 = top_2018_2022.loc[top_2018_2022['Make'].isin(['TESLA', 'NISSAN', 'CHEVROLET',
                                                         'KIA', 'Other Makes']) ]

top_2018_2022.set_index('Make', inplace=True)

top_2018_2022 = top_2018_2022.sort_values(by='counts', ascending=False)

top_2018_2022

filtered_year = EV.loc[EV['Year'] < 2023].loc[EV['Year'] > 2012]

total_yearly_count = filtered_year.groupby(['Make', 'Year']).size().reset_index(name='counts')

total_yearly_count

total_yearly_count = total_yearly_count.pivot_table(values='counts', index='Year', columns='Make')

total_yearly_count

tesla_vs_others = (total_yearly_count
                    .assign(other_EVS = total_yearly_count
                            .drop("TESLA", axis=1).sum(axis=1))
                    .loc[:, ["TESLA", "other_EVS"]]
                    .astype({"TESLA": "float64"})
                   )


tesla_vs_others.head(100)

axes_settings = {
    "spines.top": False,
    "spines.right": False,
    #"facecolor": (0, 0, 0, .1),
    #"facealpha":.4,
    #"grid": True,
    #"grid.axis": 'y'
}

plt.rc("axes", **axes_settings)

import matplotlib.gridspec as gridspec


fig = plt.figure(figsize=(11, 8.5))

gs = gridspec.GridSpec(nrows=12, ncols=6 )

fig.suptitle("Tesla Extends its Dominance in Growing Electric Vehicle Market",
             fontsize=20,
             fontweight="bold",
             fontfamily='serif'
            )

fig.text(.06, .695,
'''
Since 2015,Tesla share of EV and hybrid production has
risen from 22% to 55%, even when we see Tesla v/s
Other makers combined, Tesla is at the top.
'''
, fontsize=11, fontweight='light', fontfamily='serif')

ax1 = fig.add_subplot(gs[0:4, 2:4])


ax1.pie(
    tesla_vs_others.iloc[0].sort_values(ascending=False),
    startangle=90,
    labels = ["", ""],
    #autopct='%.0f%%',
    pctdistance=.85,
    colors=["White", "#009639"]
)

center_circle = plt.Circle((0, 0), 0.70, fc='white')
fig = plt.gcf()

# Adding Circle in Pie chart
fig.gca().add_artist(center_circle)

plt.text(
        0,
    0,
    f"{round((tesla_vs_others.loc[2015, 'TESLA'] / tesla_vs_others.loc[2015].sum()*100))}%",
    ha='center',
    va='center',
    fontsize=28
)


ax1.set_title("Tesla % Share of EV+Hybrid 2015", fontsize=12)


ax2 = fig.add_subplot(gs[0:4, 4:])


ax2.pie(
    tesla_vs_others.iloc[-1].sort_values(ascending=False),
    startangle=90,
    labels = ["", ""],
    #autopct='%.0f%%',
    pctdistance=.85,
    colors=["White", "#009639"]
)

center_circle = plt.Circle((0, 0), 0.70, fc='white')
fig = plt.gcf()

# Adding Circle in Pie chart
fig.gca().add_artist(center_circle)

plt.text(
    0,
    0,
    f"{round((tesla_vs_others.loc[2022, 'TESLA'] / tesla_vs_others.loc[2022].sum()*100))}%",
    ha='center',
    va='center',
    fontsize=28
)


ax2.set_title("Tesla % Share of EV+Hybrid 2022", fontsize=12)



ax3 = fig.add_subplot(gs[4:7, :])

ax3.stackplot(
    tesla_vs_others.index.astype("string"),
    tesla_vs_others["TESLA"],
    tesla_vs_others["other_EVS"],
    labels=["TESLA", "other_EVS"],
    colors=["#009639", "grey"]
)
ax3.set_title("Tesla Share of Market Grows")

ax3.set_ylabel("Vehicles", fontsize=12)


ax3.legend(loc="upper left")

ax4 = fig.add_subplot(gs[8:, 0:2])

ax4.barh(y=top_2018_2022.index[::-1],
        width = top_2018_2022['counts'][::-1],
        color=["grey", "#009A44", "#EF3340", "#FFCD00", "#C8102E"]
         )


positions = list(range(5))
labels = ["TESLA", "Other Makes", "Nissan", "Chevrolet", "Kia"][::-1]

ax4.set_title("Top Makers in WA 2018-2022")
ax4.set_xlabel("Number of Vehicles", fontsize=10)
ax4.set_yticks(positions)
ax4.set_yticklabels(labels)



ax5 = fig.add_subplot(gs[8:, 2:])

ax5.pie(top_2018_2022['counts'].to_numpy()[::-1],
       autopct="%.0f%%",
       labels=list(top_2018_2022.index[::-1]),
        startangle=90,
       colors = ["grey", "#009A44", "#EF3340", "#FFCD00", "#C8102E", "#009639", "#C8102E", ],
       explode=(.1, .1, .1, 0, 0))

ax5.set_title("Share of EV/Hybrid Sale 2018-2022")

plt.show()

fig.savefig('EVMarket.png', bbox_inches='tight', facecolor="white")